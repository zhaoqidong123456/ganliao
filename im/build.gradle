apply plugin: 'com.android.library'
//apply plugin: 'io.fabric'
apply plugin: 'com.huawei.agconnect'

def static getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.appTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildConfigField "String", "GIT_REVISION", "\"${getGitVersion()}\""
        buildConfigField "String", "BUILD_DATE", "\"${new Date().toLocaleString()}\""
        multiDexEnabled true

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
    }


    buildTypes {
        debug {
             manifestPlaceholders = [AMAP_KEY: "09fd4efd3e28e9bf1f449ecec7d34bfe"]
            ext.enableCrashlytics = false
        }


    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res', 'res-chatroom', 'res-rp']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs', 'libs-sdk']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries false
        jumboMode true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    flavorDimensions "rc"


    compileOptions {
        sourceCompatibility rootProject.ext.appSourceCompatibility
        targetCompatibility rootProject.ext.appTargetCompatibility
    }

    repositories {
        flatDir {
            dirs 'aar-sdk'
        }
    }

    dataBinding {
        enabled = true
    }
}

//apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    api fileTree(include: '*.aar', dir: 'aar-sdk')
//    releaseImplementation fileTree(name: "nim_ysfkit_${rootProject.ext.versionName}", ext: "aar")

    api project(path: ':uikit')
//    api project(':jrmfRpWalletlib')
    api project(':avchatkit')

    //debugImplementation project(':plugins:sf')

    implementation 'com.huawei.hms:push:4.0.4.301'
    implementation 'com.meizu.flyme.internet:push-internal:3.9.7'

    implementation 'com.netease.nimlib:jsbridge:1.3.1'

    implementation 'com.google.android.gms:play-services-base:17.1.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-core:17.2.3'
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'net.zetetic:android-database-sqlcipher:3.5.9'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    // Java8 support for Lifecycles
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.1.0'
    implementation 'org.jetbrains:annotations:15.0'


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'


}

